export default {
	'@typescript-eslint/adjacent-overload-signatures': 'off',
	'@typescript-eslint/array-type': [ 'error', {
		default: 'array',
	} ],
	'@typescript-eslint/await-thenable': 'error',
	'@typescript-eslint/ban-ts-comment': [ 'error', {
		'ts-expect-error': 'allow-with-description',
		'ts-ignore': true,
		'ts-nocheck': true,
		'ts-check': true,
		minimumDescriptionLength: 3,
	} ],
	'@typescript-eslint/ban-tslint-comment': 'error',
	'@typescript-eslint/ban-types': 'error',
	'@typescript-eslint/class-literal-property-style': [ 'error', 'fields' ],
	'class-methods-use-this': 'off',
	'@typescript-eslint/class-methods-use-this': 'off',
	'@typescript-eslint/consistent-generic-constructors': 'error',
	'@typescript-eslint/consistent-indexed-object-style': 'error',
	'@typescript-eslint/consistent-type-assertions': 'error',
	'@typescript-eslint/consistent-type-definitions': [ 'error', 'type' ],
	'@typescript-eslint/consistent-type-exports': [ 'error', { fixMixedExportsWithInlineTypeSpecifier: true } ],
	'@typescript-eslint/consistent-type-imports': [ 'error', {
		prefer: 'type-imports',
		disallowTypeAnnotations: true,
		fixStyle: 'inline-type-imports',
	} ],
	'default-param-last': 'off',
	'@typescript-eslint/default-param-last': 'error',
	'dot-notation': 'off',
	'@typescript-eslint/dot-notation': [ 'error', {
		allowPrivateClassPropertyAccess: false,
		allowProtectedClassPropertyAccess: false,
		allowIndexSignaturePropertyAccess: true,
	} ],
	'@typescript-eslint/explicit-function-return-type': [ 'error', {
		allowExpressions: true,
		allowTypedFunctionExpressions: true,
		allowHigherOrderFunctions: true,
		allowDirectConstAssertionInArrowFunctions: true,
		allowConciseArrowFunctionExpressionsStartingWithVoid: false,
		allowFunctionsWithoutTypeParameters: false,
		allowedNames: [],
		allowIIFEs: true,
	} ],
	'@typescript-eslint/explicit-member-accessibility': [ 'error', {
		accessibility: 'no-public',
	} ],
	'@typescript-eslint/explicit-module-boundary-types': 'off',
	'init-declarations': 'off',
	'@typescript-eslint/init-declarations': 'off',
	'max-params': 'off',
	'@typescript-eslint/max-params': [ 'error', {
		max: 5,
	} ],
	'@typescript-eslint/member-ordering': 'off',
	'@typescript-eslint/method-signature-style': [ 'error', 'property' ],
	'@typescript-eslint/naming-convention': [ 'error',
		{
			selector: 'default',
			format: [ 'strictCamelCase' ],
			leadingUnderscore: 'allow',
			trailingUnderscore: 'allow',
		},
		{
			selector: 'variable',
			format: [ 'strictCamelCase', 'UPPER_CASE' ],
			leadingUnderscore: 'allow',
			trailingUnderscore: 'allow',
		},
		{
			selector: 'typeLike',
			format: [ 'StrictPascalCase' ],
		} ],
	'no-array-constructor': 'off',
	'@typescript-eslint/no-array-constructor': 'error',
	'@typescript-eslint/no-array-delete': 'error',
	'@typescript-eslint/no-base-to-string': 'error',
	'@typescript-eslint/no-confusing-non-null-assertion': 'error',
	'@typescript-eslint/no-confusing-void-expression': 'error',
	'no-dupe-class-members': 'off',
	'@typescript-eslint/no-dupe-class-members': 'off',
	'@typescript-eslint/no-duplicate-enum-values': 'error',
	'@typescript-eslint/no-duplicate-type-constituents': 'error',
	'@typescript-eslint/no-dynamic-delete': 'error',
	'no-empty-function': 'off',
	'@typescript-eslint/no-empty-function': 'error',
	'@typescript-eslint/no-empty-interface': 'error',
	'@typescript-eslint/no-explicit-any': 'error',
	'@typescript-eslint/no-extra-non-null-assertion': 'error',
	'@typescript-eslint/no-extraneous-class': 'error',
	'@typescript-eslint/no-floating-promises': 'error',
	'@typescript-eslint/no-for-in-array': 'error',
	'no-implied-eval': 'off',
	'@typescript-eslint/no-implied-eval': 'error',
	'@typescript-eslint/no-import-type-side-effects': 'off',
	'@typescript-eslint/no-inferrable-types': 'error',
	'no-invalid-this': 'off',
	'@typescript-eslint/no-invalid-this': 'off',
	'@typescript-eslint/no-invalid-void-type': 'error',
	'no-loop-func': 'off',
	'@typescript-eslint/no-loop-func': 'error',
	'no-loss-of-precision': 'off',
	'@typescript-eslint/no-loss-of-precision': 'error',
	'no-magic-numbers': 'off',
	'@typescript-eslint/no-magic-numbers': 'off',
	'@typescript-eslint/no-meaningless-void-operator': 'error',
	'@typescript-eslint/no-misused-new': 'error',
	'@typescript-eslint/no-misused-promises': 'error',
	'@typescript-eslint/no-mixed-enums': 'error',
	'@typescript-eslint/no-namespace': 'error',
	'@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
	'@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
	'@typescript-eslint/no-non-null-assertion': 'error',
	'no-redeclare': 'off',
	'@typescript-eslint/no-redeclare': 'off',
	'@typescript-eslint/no-redundant-type-constituents': 'error',
	'@typescript-eslint/no-require-imports': 'error',
	'no-restricted-imports': 'off',
	'@typescript-eslint/no-restricted-imports': 'off',
	'no-shadow': 'off',
	'@typescript-eslint/no-shadow': [ 'error', { ignoreOnInitialization: true } ],
	'@typescript-eslint/no-this-alias': 'error',
	'no-throw-literal': 'off',
	'@typescript-eslint/no-throw-literal': 'off',
	'no-undef': 'off',
	'@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
	'@typescript-eslint/no-unnecessary-condition': 'error',
	'@typescript-eslint/no-unnecessary-qualifier': 'error',
	'@typescript-eslint/no-unnecessary-type-arguments': 'error',
	'@typescript-eslint/no-unnecessary-type-assertion': 'error',
	'@typescript-eslint/no-unnecessary-type-constraint': 'error',
	'@typescript-eslint/no-unsafe-argument': 'error',
	'@typescript-eslint/no-unsafe-assignment': 'error',
	'@typescript-eslint/no-unsafe-call': 'error',
	'@typescript-eslint/no-unsafe-declaration-merging': 'error',
	'@typescript-eslint/no-unsafe-enum-comparison': 'error',
	'@typescript-eslint/no-unsafe-member-access': 'error',
	'@typescript-eslint/no-unsafe-return': 'error',
	'@typescript-eslint/no-unsafe-unary-minus': 'error',
	'no-unused-expressions': 'off',
	'@typescript-eslint/no-unused-expressions': 'error',
	'no-unused-vars': 'off',
	'@typescript-eslint/no-unused-vars': [ 'error', { argsIgnorePattern: '^_', varsIgnorePattern: '^_' } ],
	'no-use-before-define': 'off',
	'@typescript-eslint/no-use-before-define': [ 'error', {
		functions: false,
		classes: true,
		variables: true,
		allowNamedExports: true,
	} ],
	'no-useless-constructor': 'off',
	'@typescript-eslint/no-useless-constructor': 'error',
	'@typescript-eslint/no-useless-empty-export': 'off',
	'@typescript-eslint/no-useless-template-literals': 'error',
	'@typescript-eslint/no-var-requires': 'error',
	'@typescript-eslint/non-nullable-type-assertion-style': 'off',
	'@typescript-eslint/parameter-properties': 'error',
	'@typescript-eslint/prefer-as-const': 'error',
	'prefer-destructuring': 'off',
	'@typescript-eslint/prefer-destructuring': 'off',
	'@typescript-eslint/prefer-enum-initializers': 'error',
	// enforce unicorn/no-for-loop instead
	'@typescript-eslint/prefer-for-of': 'off',
	'@typescript-eslint/prefer-function-type': 'error',
	'@typescript-eslint/prefer-includes': 'error',
	'@typescript-eslint/prefer-literal-enum-member': 'error',
	'@typescript-eslint/prefer-namespace-keyword': 'error',
	// TODO
	'@typescript-eslint/prefer-nullish-coalescing': 'error',
	'@typescript-eslint/prefer-optional-chain': 'error',
	'prefer-promise-reject-errors': 'off',
	'@typescript-eslint/prefer-promise-reject-errors': 'off',
	'@typescript-eslint/prefer-readonly': 'error',
	'@typescript-eslint/prefer-readonly-parameter-types': 'off',
	'@typescript-eslint/prefer-reduce-type-parameter': 'error',
	'@typescript-eslint/prefer-regexp-exec': 'error',
	'@typescript-eslint/prefer-return-this-type': 'error',
	'@typescript-eslint/prefer-string-starts-ends-with': 'error',
	'@typescript-eslint/prefer-ts-expect-error': 'error',
	'@typescript-eslint/promise-function-async': 'error',
	'@typescript-eslint/require-array-sort-compare': 'error',
	'require-await': 'off',
	'@typescript-eslint/require-await': 'error',
	'@typescript-eslint/restrict-plus-operands': 'error',
	'@typescript-eslint/restrict-template-expressions': 'error',
	'no-return-await': 'off',
	'@typescript-eslint/return-await': 'error',
	'@typescript-eslint/sort-type-constituents': 'off',
	'@typescript-eslint/strict-boolean-expressions': 'error',
	'@typescript-eslint/switch-exhaustiveness-check': 'error',
	'@typescript-eslint/triple-slash-reference': 'error',
	'@typescript-eslint/typedef': 'off',
	'@typescript-eslint/unbound-method': 'error',
	'@typescript-eslint/unified-signatures': 'error',
};
